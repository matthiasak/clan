{"version":3,"sources":["index.ts","batch.ts","vdom.ts","fp.ts","mixin.ts","model.ts","observable.ts","hamt.ts","worker.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import batch from './batch'\nimport vdom from './vdom'\nimport mixin from './mixin'\nimport model from './model'\nimport obs from './observable'\nimport * as hamt from './hamt'\nimport * as worker from './worker'\nimport * as fp from './fp'\n\nexport const hash = (v,_v=JSON.stringify(v)) => {\n    let hash = 0\n    for (let i = 0, len = _v.length; i < len; ++i) {\n        const c = _v.charCodeAt(i)\n        hash = (((hash << 5) - hash) + c) | 0\n    }\n    return hash\n}\n\nmodule.exports = Object.assign({}, fp, {\n\tbatch\n\t, vdom\n\t, mixin\n\t, model\n\t, obs\n\t, hamt\n\t, worker\n})\n","\n// batched requests\n// The `fetch()` module batches in-flight requests, so if at any point in time, anywhere in my front-end or\n// back-end application I have a calls occur to `fetch('http://api.github.com/users/matthiasak')` while another\n// to that URL is \"in-flight\", the Promise returned by both of those calls will be resolved by a single network request.\n\n// f :: (url -> options) -> Promise\nconst batch = f => {\n    let inflight = {}\n\n    return (url, options={}) => {\n        let {method} = options,\n            key = `${url}:${JSON.stringify(options)}`\n\n        if((method || '').toLowerCase() === 'post')\n            return f(url, Object.assign({}, options, {compress: false}))\n\n        return inflight[key] ||\n            (inflight[key] =\n                new Promise((res,rej) => {\n                    f(url, Object.assign({}, options, {compress: false}))\n                    .then(d => res(d))\n                    .catch(e => rej(e))\n                })\n                .then(data => {\n                    inflight = Object.assign({}, inflight, {[key]: undefined})\n                    return data\n                })\n                .catch(e =>\n                    console.error(e, url)))\n    }\n}\n\nexport default batch","import {rAF} from './fp'\n\n// Virtual DOMs\nconst vdom = () => {\n    const class_id_regex = () => {\n            return /[#\\.][^#\\.]+/ig\n        },\n        tagName_regex = () => {\n            return /^([^\\.#]+)\\b/i\n        }\n\n    const parseSelector = s => {\n        let test = null,\n            tagreg = tagName_regex().exec(s),\n            tag = tagreg && tagreg.slice(1)[0],\n            reg = class_id_regex(),\n            vdom = Object.create(null)\n\n        if(tag) s = s.substr(tag.length)\n        vdom.className = ''\n        vdom.tag = tag || 'div'\n\n        while((test = reg.exec(s)) !== null){\n            test = test[0]\n            if(test[0] === '.')\n                vdom.className = (vdom.className+' '+test.substr(1)).trim()\n            else if(test[0] === '#')\n                vdom.id = test.substr(1)\n        }\n        return vdom\n    }\n\n    const debounce = (func, wait, immediate, timeout) =>\n        (...args) => {\n            let later = () => {\n                timeout = null\n                !immediate && func(...args)\n            }\n            var callNow = immediate && !timeout\n            clearTimeout(timeout)\n            timeout = setTimeout(later, wait || 0)\n            callNow && func(...args)\n        }\n\n    const hash = (v,_v=JSON.stringify(v)) => {\n        let hash = 0\n        for (let i = 0, len = _v.length; i < len; ++i) {\n            const c = _v.charCodeAt(i)\n            hash = (((hash << 5) - hash) + c) | 0\n        }\n        return hash\n    }\n\n    const m = (selector, attrs=Object.create(null), ...children) => {\n        if(attrs.tag || !(typeof attrs === 'object') || attrs instanceof Array || attrs instanceof Function){\n            if(attrs instanceof Array) children.unshift(...attrs)\n            else children.unshift(attrs)\n            attrs = Object.create(null)\n        }\n        let vdom = parseSelector(selector)\n        if(children.length)\n            vdom.children = children\n        vdom.attrs = attrs\n        vdom.shouldUpdate = attrs.shouldUpdate\n        vdom.unload = attrs.unload\n        vdom.config = attrs.config\n        vdom.__hash = hash(vdom)\n        delete attrs.unload\n        delete attrs.shouldUpdate\n        delete attrs.config\n        return vdom\n    }\n\n    // creatign html, strip events from DOM element... for now just deleting\n    const stripEvents = ({attrs}) => {\n        let a = Object.create(null)\n\n        if(attrs){\n            for(var name in attrs){\n                if(name[0]==='o'&&name[1]==='n') {\n                    a[name] = attrs[name]\n                    delete attrs[name]\n                }\n            }\n        }\n\n        return a\n    }\n\n    const applyEvents = (events, el, strip_existing=true) => {\n        strip_existing && removeEvents(el)\n        for(var name in events){\n            el[name] = events[name]\n        }\n    }\n\n    const flatten = (arr, a=[]) => {\n        for(var i=0,len=arr.length; i<len; i++){\n            let v = arr[i]\n            if(!(v instanceof Array)){\n                a.push(v)\n            } else {\n                flatten(v, a)\n            }\n        }\n        return a\n    }\n\n    const EVENTS = 'mouseover,mouseout,wheel,mousemove,blur,focus,click,abort,afterprint,animationend,animationiteration,animationstart,beforeprint,canplay,canplaythrough,change,contextmenu,dblclick,drag,dragend,dragenter,dragleave,dragover,dragstart,drop,durationchange,emptied,ended,error,load,input,invalid,keydown,keypress,keyup,loadeddata,loadedmetadata,mousedown,mouseenter,mouseleave,mouseup,pause,pointercancel,pointerdown,pointerenter,pointerleave,pointermove,pointerout,pointerover,pointerup,play,playing,ratechange,reset,resize,scroll,seeked,seeking,select,selectstart,selectionchange,show,submit,timeupdate,touchstart,touchend,touchcancel,touchmove,touchenter,touchleave,transitionend,volumechange,waiting'.split(',').map(x => 'on'+x)\n\n    const removeEvents = el => {\n        // strip away event handlers on el, if it exists\n        if(!el) return;\n        for(var i in EVENTS){\n            el[i] = null\n        }\n    }\n\n    let mnt\n\n    const mount = (fn, el) => {\n        mnt = [el, fn]\n        render(fn, el)\n    }\n\n    const render = debounce((fn, el) => rAF(_ => {\n        applyUpdates(fn, el.children[0], el)\n    }))\n\n    const update = () => {\n        if(!mnt) return\n        let [el, fn] = mnt\n        render(fn, el)\n    }\n\n    const stylify = style => {\n        let s = ''\n        for(var i in style){\n            s+=`${i}:${style[i]};`\n        }\n        return s\n    }\n\n    const setAttrs = ({attrs, id, className, __hash},el) => {\n    \tel.className = ''\n    \tel.style = ''\n\n        if(attrs){\n            for(var attr in attrs){\n                if(attr === 'style') {\n                    el.style = stylify(attrs[attr])\n                } else if(attr === 'innerHTML'){\n                    rAF(() => el.innerHTML = attrs[attr])\n                } else if(attr === 'value'){\n                    rAF(() => el.value = attrs[attr])\n                } else {\n                    el.setAttribute(attr, attrs[attr])\n                }\n            }\n        }\n        let _id = attrs.id || id\n        if(_id) el.id = _id\n        let _className = ((attrs.className || '') + ' ' + (className || '')).trim()\n        if(_className) el.className = _className\n        el.__hash = __hash\n    }\n\n    // recycle or create a new el\n    const createTag = (vdom=Object.create(null), el, parent=el&&el.parentElement) => {\n        let __vdom = vdom\n        // make text nodes from primitive types\n        if(typeof vdom !== 'object'){\n            let t = document.createTextNode(vdom)\n            if(el){\n                parent.insertBefore(t,el)\n                removeEl(el)\n            } else {\n                parent.appendChild(t)\n            }\n            return t\n        }\n\n        // else make an HTMLElement from \"tag\" types\n        let {tag, attrs, id, className, unload, shouldUpdate, config, __hash} = vdom,\n            shouldExchange = !el || !el.tagName || (tag && el.tagName.toLowerCase() !== tag.toLowerCase()),\n            _shouldUpdate = !(shouldUpdate instanceof Function) || shouldUpdate(el)\n\n        if(!attrs) return\n        if(el && (!_shouldUpdate || ((!vdom instanceof Function) && el.__hash === __hash))) {\n            return\n        }\n\n        if(shouldExchange){\n            let t = document.createElement(tag)\n            el ? (parent.insertBefore(t, el), removeEl(el)) : parent.appendChild(t)\n            el = t\n        }\n\n        setAttrs(vdom, el)\n        if(el.unload instanceof Function) {\n            rAF(el.unload)\n        }\n        if(unload instanceof Function) {\n            el.unload = unload\n        }\n        applyEvents(stripEvents(vdom), el)\n        config && rAF(_ => config(el))\n        return el\n    }\n\n    // find parent element, and remove the input element\n    const removeEl = el => {\n        if(!el) return\n        el.parentElement.removeChild(el)\n        removeEvents(el)\n        // removed for now, added unload logic to the immediate draw()s\n        if(el.unload instanceof Function)\n            el.unload()\n    }\n\n    const insertAt = (el, parent, i) => {\n        if(parent.children.length > i) {\n            let next_sib = parent.children[i]\n            parent.insertBefore(el, next_sib)\n        } else {\n            parent.appendChild(el)\n        }\n    }\n\n    const applyUpdates = (vdom, el, parent=el&&el.parentElement) => {\n        let v = vdom\n        // if vdom is a function, execute it until it isn't\n        while(vdom instanceof Function)\n            vdom = vdom()\n\n        if(!vdom) return\n\n        if(vdom.resolve instanceof Function){\n            let i = parent.children.length\n            return vdom.resolve().then(v => {\n                if(!el) {\n                    let x = createTag(v, null, parent)\n                    insertAt(x, parent, i)\n                    applyUpdates(v, x, parent)\n                } else {\n                    applyUpdates(v, el, parent)\n                }\n            })\n        }\n\n        // create/edit el under parent\n        let _el = vdom instanceof Array ? parent : createTag(vdom, el, parent)\n\n        if(!_el) return\n\n        if(vdom instanceof Array || vdom.children){\n            let vdom_children = flatten(vdom instanceof Array ? vdom : vdom.children),\n                el_children = vdom instanceof Array ? parent.childNodes : _el.childNodes\n\n            while(el_children.length > vdom_children.length){\n                removeEl(el_children[el_children.length-1])\n            }\n\n            for(let i=0; i<vdom_children.length; i++){\n                applyUpdates(vdom_children[i],el_children[i],_el)\n            }\n        } else {\n            while(_el.childNodes.length > 0){\n                removeEl(_el.childNodes[_el.childNodes.length-1])\n            }\n        }\n    }\n\n    const qs = (s='body', el=document) => el.querySelector(s)\n\n    const resolver  = (states = {}) => {\n        let promises = [],\n            done = false\n\n        const _await = (_promises = []) => {\n            promises = [...promises, ..._promises]\n            return finish()\n        }\n\n        const wait = (ms=0) => new Promise(res => setTimeout(res, ms))\n\n        const isDone = () => done\n\n        const finish = () => {\n            const total = promises.length\n            return wait().then(_ => Promise.all(promises)).then(values => {\n                if(promises.length > total){\n                    return finish()\n                }\n                done = true\n                return states\n            })\n        }\n\n        const resolve = (props) => {\n            const keys = Object.keys(props)\n            if (!keys.length)\n                return Promise.resolve(true)\n\n            let f = []\n            keys.forEach(name => {\n                let x = props[name]\n\n                while(x instanceof Function)\n                    x = x()\n\n                if(x && x.then instanceof Function)\n                    f.push(x.then(d => states[name] = d))\n            })\n\n            return _await(f)\n        }\n\n        const getState = () => states\n\n        return { finish, resolve, getState, promises, isDone }\n    }\n\n    const gs = (view, state) => {\n        let r = view(state)\n        while(r instanceof Function)\n            r = view(instance.getState())\n        return r\n    }\n\n    const container = (view, queries={}, instance=resolver()) => {\n        let wrapper_view = state =>\n            instance.isDone() ? view(state) : m('span')\n\n        return () => {\n            let r = gs(wrapper_view, instance.getState())\n            instance.resolve(queries)\n\n            if(r instanceof Array) {\n                let d = instance.finish().then(_ =>\n                    gs(wrapper_view, instance.getState()))\n\n                return r.map((x,i) => {\n                    x.resolve = _ => d.then(vdom => vdom[i])\n                    return x\n                })\n            }\n\n            r.resolve = _ => instance.finish().then(_ =>\n                gs(wrapper_view, instance.getState()))\n\n            return r\n        }\n    }\n\n    const reservedAttrs = ['className','id']\n\n    const toHTML = _vdom => {\n        while(_vdom instanceof Function) _vdom = _vdom()\n        if(_vdom instanceof Array) return new Promise(r => r(html(..._vdom)))\n        if(!_vdom) return new Promise(r => r(''))\n        if(typeof _vdom !== 'object') return new Promise(r => r(_vdom))\n        return (_vdom.resolve ? _vdom.resolve() : Promise.resolve()).then(vdom => {\n            if(!vdom) vdom = _vdom\n\n            if(vdom instanceof Array) return new Promise(r => r(html(...vdom)))\n\n            const {tag, id, className, attrs, children, instance} = vdom,\n                _id = (id || (attrs && attrs.id)) ? ` id=\"${(id || (attrs && attrs.id) || '')}\"` : '',\n                _class = (className || (attrs && attrs.className)) ? ` class=\"${((className||'') + ' ' + (attrs.className||'')).trim()}\"` : ''\n\n            const events = stripEvents(vdom)\n            let _attrs = '',\n                inner = ''\n            for(var i in (attrs || Object.create(null))){\n                if(i === 'style'){\n                    _attrs += ` style=\"${stylify(attrs[i])}\"`\n                } else if(i === 'innerHTML') {\n                    inner = attrs[i]\n                } else if(reservedAttrs.indexOf(i) === -1){\n                    _attrs += ` ${i}=\"${attrs[i]}\"`\n                }\n            }\n\n            if(!inner && children)\n                return html(...children).then(str =>\n                    `<${tag}${_id}${_class}${_attrs}>${str}</${tag}>`)\n\n            if('br,input,img'.split(',').filter(x => x===tag).length === 0)\n                return new Promise(r => r(`<${tag}${_id}${_class}${_attrs}>${inner}</${tag}>`))\n\n            return new Promise(r => r(`<${tag}${_id}${_class}${_attrs} />`))\n        })\n    }\n\n    const html = (...v) => Promise.all(v.map(toHTML)).then(x => x.filter(x => !!x).join(''))\n\n    return {container, html, qs, update, mount, m, debounce}\n}\n\nmodule.exports = vdom()\n\n/*\nusage:\n\nlet component = () =>\n    new Array(20).fill(true).map(x =>\n        m('div', {onMouseOver: e => log(e.target.innerHTML)}, range(1,100)))\n\nclient-side\n-----\nmount(component, qs())\n\nclient-side constant re-rendering\n-----\nconst run = () => {\n    setTimeout(run, 20)\n    update()\n}\nrun()\n*/\n\n/* CONTAINER / HTML USAGE (Server-side rendering)\n\nconst name = _ => new Promise(res => setTimeout(_ => res('matt'), 1500))\n\nlet x = container(data => [\n        m('div.test.row', {className:'hola', 'data-name':data.name, style:{border:'1px solid black'}}),\n        m('div', data.name),\n    ],\n    {name}\n)\n\nhtml(x).then(x => log(x)).catch(e => log(e+''))\n*/\n","export const log = (...a) => console.log(...a)\n\n// rAF\nexport const rAF =\n      !!global.document &&\n      (global.requestAnimationFrame ||\n      global.webkitRequestAnimationFrame ||\n      global.mozRequestAnimationFrame) ||\n      (cb => setTimeout(cb, 16.6))\n\n// composition\n// c :: (T -> U) -> (U -> V) -> (T -> V)\nexport const c = (f,g) => x => f(g(x))\n\n// cof :: [(an -> bn)] -> a0 -> bn\n// compose forward\nexport const cof = (...fns) => fns.reduce((acc,fn) => c(acc, fn))\n\n// cob :: [(an -> bn)] -> b0 -> an\n// compose backwards\nexport const cob = (...fns) => cof(...fns.reverse())\n\n// functional utilities\n// pointfree\nexport const pf = fn => (...args) => x => fn.apply(x, args)\n\n// curry\n// curry :: (T -> U) -> [args] -> ( -> U)\nexport const curry = (fn, ...args) =>\n\tfn.bind(undefined, ...args)\n\n\n// Transducers\nexport const mapping = (mapper) => // mapper: x -> y\n    (reducer) => // reducer: (state, value) -> new state\n        (result, value) =>\n            reducer(result, mapper(value))\n\nexport const filtering = (predicate) => // predicate: x -> true/false\n    (reducer) => // reducer: (state, value) -> new state\n        (result, value) =>\n            predicate(value) ? reducer(result, value) : result\n\nexport const concatter = (thing, value) =>\n    thing.concat([value])\n","\nconst mixin = (...classes) => {\n    class _mixin {}\n\n    let proto = _mixin.prototype\n\n    classes.map(({prototype:p}) => {\n        Object.getOwnPropertyNames(p).map(key => {\n            let oldFn = proto[key] || ($ => {})\n            proto[key] = function() {\n                oldFn.apply(null, [].slice.call(arguments))\n                return p[key].apply(null, [].slice.call(arguments))\n            }\n        })\n    })\n\n    return _mixin\n}\n\nmodule.exports = mixin","// Validate JS objects for their \"shape\"\nconst model = {\n    is(type, value) {\n        if(type && type.isValid instanceof Function){\n            return type.isValid(value)\n        } else if((type === String && ((value instanceof String) || typeof value === 'string'))\n            || (type === Number && ((value instanceof Number) || typeof value === 'number'))\n            || (type === Boolean && ((value instanceof Boolean) || typeof value === 'boolean'))\n            || (type === Function && ((value instanceof Function) || typeof value === 'function'))\n            || (type === Object && ((value instanceof Object) || typeof value === 'object'))\n            || (type === undefined)\n        ){\n            return true\n        }\n\n        return false\n    },\n    check(types, required, data) {\n        Object.keys(types).forEach(key => {\n            let t = types[key],\n                value = data[key]\n\n            if(required[key] || value !== undefined){\n                if(!(t instanceof Array)) t = [t]\n\n                let i = t.reduce((a,_type) => a || MODEL.is(_type, value), false)\n                if(!i) {\n                    throw `{${key}: ${JSON.stringify(value)}} is not one of ${t.map(x => `\\n - ${x}`)}`\n                }\n            }\n        })\n\n        return true\n    },\n    init(...args) {\n        let types, required, logic\n        args.map(x => {\n            if(x instanceof Function && !logic){ logic = x }\n            else if(typeof x === 'object') {\n                if(!types){ types = x }\n                else if(!required){ required = x }\n            }\n        })\n\n        const isValid = (data) => {\n            const pipe = logic ? [check, logic] : [check]\n            return pipe.reduce((a,v) => a && v(types||{},required||{},data), true)\n        }\n\n        const whenValid = (data) => new Promise((res,rej) => isValid(data) && res(data))\n\n        return {isValid, whenValid}\n    },\n    ArrayOf(M) {\n        return MODEL.init((t,r,data) => {\n            if(!(data instanceof Array)) throw `${data} not an Array`\n            data.map(x => {\n                if(!MODEL.is(M, x))\n                    throw `${x} is not a model instance`\n            })\n            return true\n        })\n    }\n}\n\nexport default model\n\n/**\nUse it\n\n// create a Name model with required first/last,\n// but optional middle\nlet Name = MODEL.init({\n    first: String,\n    middle: String,\n    last: String\n}, {first:true, last:true})\n\n// create a Tags model with extra checks\nlet Tags = MODEL.init((types,required,data) => {\n    if(!(data instanceof Array)) throw `${data} not an Array`\n    data.map(x => {\n        if(!is(String, x))\n            throw `[${data}] contains non-String`\n    })\n    return true\n})\n\n// create a Price model that just has a business logic fn\nlet Price = MODEL.init((t,r,d) => {\n    return (d instanceof Number || typeof d === 'number') && d !== 0\n})\n\n// create an Activity model with a required type and name,\n// all others optional\nlet Activity = MODEL.init({\n    type: [String, Function, Number],\n    latlng: Array,\n    title: String,\n    tags: Tags,\n    name: Name,\n    price: Price\n}, {name:true, price: true})\n\n// create a new Activity instance, throwing errors if there are\n// any invalid fields.\nlet a = {\n    tags: ['1','2'],\n    type: 1,\n    name: {first:'matt',last:'keas'},\n    price: 100.43,\n    url: 'http://www.google.com'\n}\nActivity.whenValid(a).then(log).catch(e => log(e+''))\n**/\n","// async-supporting-observables\nconst obs = (state) => {\n    let subscribers = []\n\n    const fn = (val) => {\n        if(val !== undefined){\n            state = val\n            for(let i = 0, len = subscribers.length; i<len; i++)\n            \tsubscribers[i](val)\n        }\n        return state\n    }\n\n    fn.map = f => {\n      const o = obs()\n      subscribers.push(val => o(f(val)))\n      return o\n    }\n\n    fn.filter = f => {\n      const o = obs()\n      subscribers.push(val => f(val) && o(val))\n      return o\n    }\n\n    fn.then = f => {\n      subscribers.push(val => f(val))\n      return fn\n    }\n\n    fn.take = (n) => {\n        const values = [],\n        \to = obs()\n\n        const cb = val => {\n            if(values.length < n)\n                values.push(val)\n\n            if(values.length === n) {\n                subscribers.delete(cb)\n                return o(values)\n            }\n        }\n\n        subscribers.push(cb)\n\n        return o\n    }\n\n    fn.takeWhile = f => {\n        const values = [],\n        \to = obs()\n\n        const cb = val => {\n            if(!f(val)) {\n                subscribers = subscribers.filter(x => x !== cb)\n                return o(values)\n            }\n\n\t\t\tvalues.push(val)\n        }\n\n        subscribers.push(cb)\n\n        return o\n    }\n\n    fn.reduce = (f,acc) => {\n        const o = obs()\n\n        subscribers.push(val => {\n            acc = f(acc,val)\n            o(acc)\n        })\n\n        return o\n    }\n\n    fn.maybe = f => {\n        const success = obs(),\n              error = obs(),\n              cb = val =>\n        \t\tf(val)\n\t\t\t\t    .then(d => success(d))\n                    .catch(e => error(e))\n\n        subscribers.push(cb)\n\n        return [ success, error ]\n    }\n\n    fn.stop = () => subscribers = []\n\n    fn.debounce = ms => {\n        const o = obs()\n        let ts = +new Date\n        subscribers.push(val => {\n            const now = +new Date\n            if(now - ts >= ms){\n                ts = +new Date\n                o(val)\n            }\n        })\n        return o\n    }\n\n    return fn\n}\n\nobs.from = f => {\n    const o = obs()\n    f(x => o(x))\n    return o\n}\n\nobs.union = (...fs) => {\n    const o = obs()\n    fs.map(f => f.then(o))\n    return o\n}\n\nexport default obs","// compute the hamming weight\nexport const hamming = x => {\n    x -= ((x >> 1) & 0x55555555)\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333)\n    x = (x + (x >> 4)) & 0x0f0f0f0f\n    x += (x >> 8)\n    x += (x >> 16)\n    return (x & 0x7f)\n}\n\nexport const popcount = root => {\n    if(root.key)\n        return 1\n\n    let c = root.children\n    if(c) {\n        var sum = 0\n        for(var i in c) sum += popcount(c[i])\n        return sum\n    }\n}\n\n// hash fn\nexport const hash = (v='') => {\n    v = JSON.stringify(v)\n    var hash = 5381\n    for (let i = 0; i < v.length; i++)\n        hash = ((hash << 5) + hash) + v.charCodeAt(i)\n    return hash\n}\n\n// compare two hashes\nexport const comp = (a,b) => hash(a) === hash(b)\n\n// get a bit vector\nexport const HMAP_SIZE = 8\nexport const MAX_DEPTH = 32 / HMAP_SIZE - 1\nexport const vec = (h=0, i=0, range=HMAP_SIZE) => (h >>> (range*i)) & ((1 << range) - 1)\n\nexport const shallowClone = x => {\n    let y = Object.create(null)\n    for(let i in x)\n        y[i] = x[i]\n    return y\n}\n\nexport const cloneNode = x => {\n    let y = node()\n    if(!x) return y\n\n    if(x.children) {\n        y.children = shallowClone(x.children)\n    } else if(x.key !== undefined) {\n        y.key = x.key\n        y.val = x.val\n        y.hash = x.hash\n    }\n\n    return y\n}\n\nexport const numChildren = x => {\n    let c = 0\n    for(var i in x) ++c\n    return c\n}\n\nexport const set = (root, key, val) => {\n    if((root.key === undefined) && !root.children) return node(key, val)\n\n    const newroot = cloneNode(root), h = hash(key)\n\n    // walk the tree\n    for(var i = 3, r = root, n = newroot; i >= 0; --i){\n        let bits = vec(h, i)\n\n        if(r.key !== undefined){\n            // if we have a collision\n            if(r.key === key || i === 0) {\n                // if keys match or is leaf, just overwrite n's val\n                n.val = val\n            } else if(i !== 0) {\n                // else if r is not at max depth and keys don't match\n                // add levels to both trees, new tree must be able\n                // to access old data\n\n                // 0. create makeshift value node for r\n                // and new value node for n\n                let cp = node(r.key, r.val, r.hash)\n                let cn = node(key, val, h)\n                let rh = r.hash\n\n                // 1. delete value props from nodes\n                delete r.key\n                delete r.val\n                delete r.hash\n                delete n.key\n                delete n.val\n                delete n.hash\n\n                // 2. create layers until bit-vectors don't collide\n                for(let j = i, __r = r, __n = n; j >= 0; j--){\n                    let vecr = vec(rh, j),\n                        vecn = vec(h, j)\n\n                    // create new layer for c and r\n                    let c = __r.children = Object.create(null)\n                    let d = __n.children = shallowClone(c)\n\n                    if(vecr !== vecn) {\n                        c[vecr] = cp\n                        d[vecr] = cp\n                        d[vecn] = cn\n                        break\n                    } else {\n                        __r = c[vecr] = node()\n                        __n = d[vecn] = cloneNode(__r)\n                    }\n                }\n            }\n            break\n        } else if(r.children) {\n            let _r = r.children[bits]\n            if(!_r) {\n                n = n.children[bits] = node(key, val)\n                break\n            } else {\n                r = _r\n                n = n.children[bits] = cloneNode(r)\n            }\n        }\n    }\n\n    return newroot\n}\n\nexport const get = (root, key) => {\n    if(root.key === key) return root.val\n    const h = hash(key)\n    for(let i = 3, r = root; i >= 0; --i){\n        if(!r.children) return undefined\n        r = r.children[vec(h, i)]\n        if(!r) return undefined\n        if(r.key !== undefined) return r.val\n    }\n\n    return undefined\n}\n\nexport const first = root => {\n    let c = root.children\n    for(let i in c) return c[i]\n}\n\nexport const unset = (root, key) => {\n    const n = cloneNode(root),\n          h = hash(key)\n\n    for(var i = 3, _n = n, p = n; i >= -1; --i) {\n        if(_n.key) {\n            delete _n.key\n            delete _n.val\n            delete _n.hash\n            return n\n\n//             let c = numChildren(p)\n\n//             if(c === 1) {\n//                 // if only child, delete child and parent?\n//                 delete p.children\n//             } else if(c===2){\n//                 // if 2 children, promote sibling as parent value nod\n//                 delete p.children[bits]\n//                 let sibling = first(p)\n//                 delete p.children\n//                 if(sibling.children){\n//                     p.children = sibling.children\n//                 } else if(p.key) {\n//                     p.val = sibling.val\n//                     p.hash = sibling.hash\n//                     p.key = sibling.key\n//                 }\n//             } else {\n//                 // if more than 2 children, just delete the one\n//                 delete p.children[bits]\n//             }\n//             return n\n        }\n\n        const bits = vec(h, i)\n        _n = _n && _n.children && _n.children[bits]\n        if(!_n) return n\n        p = _n\n    }\n    return n\n}\n\nexport const node = (key,val,h= key !== undefined && hash(key)) => {\n    /*\n    potential props of a tree node\n    - key - hashkey\n    - val - value\n    - children - { ... } -> points to other nodes (List<Node> children)\n    */\n\n    let item = Object.create(null)\n    if(key !== undefined){\n        item.key = key\n        item.hash = h\n        item.val = val\n    }\n    return item\n}\n\nexport const map = (root, fn) => {\n    if(root.key !== undefined)\n        return node(root.key, fn(root.val, root.key), root.hash)\n\n    let d = cloneNode(root),\n        c = d.children\n\n    if(c) {\n        for(var i in c){\n            c[i] = map(c[i], fn)\n        }\n    }\n\n    return d\n}\n\nexport const filter = (root, fn) => {\n    if(root.key !== undefined)\n        return fn(root.val, root.key) ? root : undefined\n\n    let d = cloneNode(root),\n        c = d.children\n\n    if(c) {\n        for(var i in c){\n            if(!filter(c[i], fn))\n                delete c[i]\n        }\n    }\n\n    return d\n}\n\nexport const reduce = (root, fn, acc) => {\n    if(root.key !== undefined)\n        return fn(acc, root.val, root.key)\n\n    let c = root.children\n    if(c) {\n        for(var i in c)\n            acc = reduce(c[i], fn, acc)\n\n        return acc\n    }\n}\n\nexport const toList = (root, r=[]) => {\n    if(root.key !== undefined) r.push(root.val)\n\n    let c = root.children\n    if(c) {\n        for(var i in c) {\n            toList(c[i], r)\n        }\n    }\n\n    return r\n}\n\nexport const toOrderedList = (root, r=[]) => {\n    let i = 0,\n        n\n\n    do {\n        n = get(root, i++)\n        n !== undefined && r.push(n)\n    } while(n)\n\n    return r\n}\n\nexport const toJSON = (root, r={}) => {\n    if(root.key !== undefined)\n        r[root.key] = root.val\n\n    let c = root.children\n    if(c) {\n        for(var i in c) {\n            toJson(c[i], r)\n        }\n    }\n\n    return r\n}\n\nexport const push = (root, val) => set(root, popcount(root), val)\n\nexport const pop = root => unset(root, popcount(root)-1)\n\nexport const shift = root => reduce(\n    unset(root, 0),\n    (acc,v,k) => set(acc, k-1, v),\n    node())\n\nexport const unshift = (root, val) =>\n    set(\n        reduce(\n            root,\n            (acc,v,k) => set(acc, k+1, v),\n            node()),\n        0,\n        val)\n\nexport const hamt = node\n\n// console.clear()\n// const l = (...args) => console.log(...args)\n// const j = (...a) => console.log(JSON.stringify(a))\n\n// let x = hamt()\n// let s = 20\n\n// Array(s).fill(1).map((v,i) => {\n//     x = set(x, i, i)\n// })\n\n// l(toList(x))\n// l(toJson(x))\n\n// x = map(x, x => log(x*x) || x*x)\n// l(get(x, 19))\n\n// l(x)\n// l(reduce(x, (acc, x) => acc+x, 0))\n\n// x = unset(x, 1)\n// Array(s).fill(1).map((_,i) => {\n//     if(!get(x, i)) l(i)\n//     // l(get(x, i))\n// })","const supports = (...q) => () =>\n    q.reduce((acc,s) =>\n        acc\n        || (window[s] !== undefined)\n        && /[native code]/.test(window[s]+'')\n        && window[s]\n    , false)\n\nconst supportsWorkers = supports('Worker')\n\nconst supportsBlobs = supports('Blob')\n\nconst supportsURLs = supports('URL', 'webkitURL')\n\nconst supportsBuilders = supports('BlobBuilder', 'WebKitBlobBuilder', 'MozBlobBuilder')\n\n/*\nworker:: [X] -> Worker where X : Function | String\n\nthe last X provided in the arguments will be setup as the handler for self.onmessage()\n*/\nexport const worker = (...code) => {\n    if(!supportsWorkers()) throw 'WebWorkers not supported'\n\n    code[code.length-1] = `self.onmessage=${code[code.length-1]}`\n\n    const B = supportsBlobs()\n        , U = supportsBuilders()\n        , W = supportsURLs()\n\n    let blob\n\n    if(supportsBlobs()) {\n        blob =\n            new B(code.map(c => c+''),\n            {type: 'application/javascript'})\n\n    } else if(U){\n        blob = new U\n        code.map(c => blob.append(c+''))\n        blob = blob.getBlob()\n    } else {\n        blob = `data:application/javascript,`\n            +`${encodeURIComponent(\n                code.reduce((acc,c) => acc+c, '')\n              )}`\n    }\n\n    let url = W.createObjectURL(blob)\n    return new Worker(url)\n}\n\nexport const farm = (n, ...code) => {\n    let workers = Array(n).fill(1).map(x => worker(...code))\n        , current = 0\n        , iter = () => {\n            let _n = current\n            ++current >= n && (current = 0)\n            return current\n        }\n        , pipe\n        , onerror\n\n    workers.map(w => {\n        w.onmessage = e => pipe instanceof Function && pipe(e.data)\n        w.onerror = e => onerror instanceof Function && onerror(e)\n    })\n\n    const exec = (...args) => {\n        let w = workers[iter()]\n        w && w.postMessage(args)\n    }\n\n    exec.pipe = fn => {\n        pipe = fn\n        return exec\n    }\n    exec.error = fn => {\n        onerror = fn\n        return exec\n    }\n    return exec\n}\n"]}